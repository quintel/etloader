#accordion.panel-group{"aria-multiselectable" => "true", :role => "tablist"}
  - edge_nodes_for(topology).each do |node|
    .panel.panel-default
      .panel-heading{:role => "tab", id: node.parameterize}
        %h4.panel-title
          %a{"aria-controls" => "#{node.parameterize}-panel", "aria-expanded" => "false", "data-parent" => "#accordion", "data-toggle" => "collapse", :href => "##{node.parameterize}-panel", :role => "button"}
            = node

      .panel-collapse.collapse.in{"aria-labelledby" => node.parameterize, :role => "tabpanel", id: "#{node.parameterize}-panel"}
        .panel-body
          .technologies{data: {node: node}}
            .technology.hidden
            - testing_ground_profile[node].each do |technology|
              = render partial: "technology_template", locals: { technology: technology, node: node }

          .actions
            .add-technology
              .input-group{role: "group"}
                %select.name.form-control{autocomplete: 'off'}
                  = profile_table_options_for_name

                %span.input-group-btn
                  %button{type: "button", class: "btn btn-success"}
                    Add

.data
  .hidden.buffer_template
    - @technologies.select(&:composite).each do |composite|
      %select.buffer.form-control{class: composite.key, autcomplete: 'off', data: {type: 'buffer' }}
        = options_for_composites(testing_ground_profile, composite)

  .hidden.profile
    - @technologies.each do |technology|
      %select.form-control{class: technology.key, data: {type: 'profile'}}
        - case technology.key
        - when 'generic'
          = options_for_load_profiles(testing_ground_profile)
        - else
          = options_for_load_profiles(testing_ground_profile, technology)

  .hidden.technology_template
    = render partial: "technology_template", locals: { technology: InstalledTechnology.new, node: nil, index: '_' }

  .hidden.includes
    = composites_data.to_json
