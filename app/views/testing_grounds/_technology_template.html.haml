.technology{class: technology_class(technology), data: stringify_values(technology.attributes.slice(*InstalledTechnology::EDITABLES).merge(node: node)) }
  %div.pull-right
    .btn-group
      = link_to "Toggle advanced", "#!", class: "btn btn-primary show-advanced"

      = link_to "#!", class: "remove-row btn btn-danger" do
        %span.glyphicon.glyphicon-trash

  .indent.arrow{class: ('hidden' unless technology.buffer.present?) }

  .wrapper-tech
    %strong= technology.name
    .editable.profile.select{class: ('hidden' if technology.buffer.present?) }
      %span Profile
      %select.profile.form-control{autocomplete: 'off', data: { type: 'profile' }}

    .editable.buffer.select{class: ('hidden' unless technology.buffer.present?) }
      %span Buffer
      %select.buffer.form-control{autocomplete: 'off', data: { type: 'buffer' }}

    .editable.position_relative_to_buffer{class: ('hidden' unless technology.position_relative_to_buffer.present?)}
      %span Position technology
      - %w(boosting buffering).each do |position|
        %label.radio-inline{class: ('active' if position == technology.position_relative_to_buffer)}
          %input{type: 'radio', value: 'after', name: technology.position_relative_to_buffer_name, checked: ('checked' if position == technology.position_relative_to_buffer), value: position, data: {type: 'position_relative_to_buffer'} }/
          = position.humanize

      = tooltip_tag(t(:'testing_grounds.form.position_relative_to_buffer.tooltip'))

      .clearfix

    .editable.text{class: 'demand'}
      %span Demand [kWh]
      %input.form-control{type: 'text', value: technology.demand.try(:round, 2), data: {type: 'demand'} }
      .clearfix

    .editable.text{class: 'capacity'}
      %span Output capacity [kW]
      %input.form-control{type: 'text', value: technology.capacity.try(:round, 4), data: {type: 'capacity' } }
      .clearfix

    .editable.text{class: 'volume'}
      %span Volume [kWh]
      %input.form-control{type: 'text', value: technology.volume, data: { type: 'volume' }}
      .clearfix

    .editable.text{class: 'units'}
      %span Units
      %input.form-control{type: 'text', value: technology.units, data: { type: 'units' }}
      .clearfix

    - InstalledTechnology::HIDDEN.each do |key|
      - if %i(concurrency includes composite_index).include?(key)
        .editable.hidden{class: key}
          %input.form-control{type: 'text', value: technology.public_send(key), data: {type: key} }
      - else
        .editable.advanced.hidden{class: key}
          %span= t(:"installed_technology_attributes.#{key}")
          %input.form-control{type: 'text', value: technology.public_send(key), data: {type: key } }
          .clearfix

    .clearfix

  .clearfix
