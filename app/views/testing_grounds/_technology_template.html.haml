.technology{id: "T#{technology.object_id}", class: technology_class(technology), data: technology_data(technology, node) }
  .advanced-actions.pull-right.btn-group
    = link_to "Toggle advanced", "#!", class: "btn btn-primary btn-sm show-advanced"

    = link_to "#!", class: "remove-row btn btn-danger btn-sm" do
      %span.glyphicon.glyphicon-trash

  - if technology.sticks_to_composite?
    .indent.arrow

  .wrapper-tech
    %strong
      = I18n.t("inputs.#{ technology.type }")
      = technology.name_adjective

    - if technology.whitelisted?('profile')
      .editable.profile.select
        %span Profile
        %select.profile.form-control{autocomplete: 'off', data: { type: 'profile' }}
          = options_for_load_profiles(technology.technology)

    - if technology.whitelisted?('buffer')
      .editable.buffer.select
        %span Buffer
        %select.buffer.form-control{autocomplete: 'off', data: { type: 'buffer' }}

    - if technology.whitelisted?('position_relative_to_buffer')
      .editable.position_relative_to_buffer
        %span Position technology

        - %w(boosting buffering).each do |position|
          %label.radio-inline{class: ('active' if position == technology.position_relative_to_buffer)}
            %input{type: 'radio', value: 'after', name: "position_relative_to_buffer_name_#{ technology.object_id }", checked: ('checked' if position == technology.position_relative_to_buffer), value: position, data: {type: 'position_relative_to_buffer'} }/
            = position.humanize

        = tooltip_tag(t(:'testing_grounds.form.position_relative_to_buffer.tooltip'))

        .clearfix

    - if technology.whitelisted?('congestion_reserve_percentage')
      .editable.battery-slider
        %span Congestion reserve
        %span.tick.min 0%
        %input.slider{data: {'slider-min' => 0, 'slider-max' => 100, 'slider-step' => 1, 'slider-value' => technology.congestion_reserve_percentage, 'type' => 'congestion_reserve_percentage'}}
        %span.tick.max 100%
        %span.tick.value
          = "#{ technology.congestion_reserve_percentage.to_i }%"
        = tooltip_tag(t(:'testing_grounds.form.congestion_reserve_percentage.tooltip'))
        .clearfix

    .editable.text{class: 'capacity'}
      %span Output capacity [kW]
      %input.form-control{type: 'text', value: technology.capacity.try(:round, 4), data: { type: 'capacity' } }
      .clearfix

    .editable.text{class: 'demand'}
      %span Demand [kWh]
      %input.form-control{type: 'text', value: technology.demand.try(:round, 2), data: { type: 'demand'} }
      .clearfix

    - if technology.whitelisted?('input_capacity')
      .editable.text{class: 'carrier_capacity'}
        %span
          %span.tick> Input capacity (
          %span.tick.carrier>= technology.carrier
          %span.tick ) [kW]
        %input.form-control{type: 'text', value: technology.carrier_capacity.try(:round, 4), disabled: "disabled", data: { type: 'carrier_capacity' } }
        .clearfix

    .editable.text{class: 'volume'}
      %span Volume [kWh]
      %input.form-control{type: 'text', value: technology.volume, data: { type: 'volume' }}
      .clearfix

    .editable.text{class: 'units'}
      %span Units
      %input.form-control{type: 'text', value: technology.units, data: { type: 'units' }}
      .clearfix

    - InstalledTechnology.attribute_set.each do |attribute|
      - if attribute.options[:hidden]
        .editable.hidden{class: attribute.name}
          %input.form-control{type: 'text', value: technology.public_send(attribute.name), data: { type: attribute.name } }

      - if attribute.options[:advanced]
        .editable.advanced.hidden{class: attribute.name}
          %span= t(:"installed_technology_attributes.#{ attribute.name }")
          %input.form-control{type: 'text', value: technology.public_send(attribute.name), data: { type: attribute.name } }
          .clearfix

    .clearfix

  .clearfix
